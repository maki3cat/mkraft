// Code generated by MockGen. DO NOT EDIT.
// Source: util/config.go
//
// Generated by this command:
//
//	mockgen -source=util/config.go -destination=./util/config_mock.go -package util
//

// Package util is a generated GoMock package.
package util

import (
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockConfigIface is a mock of ConfigIface interface.
type MockConfigIface struct {
	ctrl     *gomock.Controller
	recorder *MockConfigIfaceMockRecorder
	isgomock struct{}
}

// MockConfigIfaceMockRecorder is the mock recorder for MockConfigIface.
type MockConfigIfaceMockRecorder struct {
	mock *MockConfigIface
}

// NewMockConfigIface creates a new mock instance.
func NewMockConfigIface(ctrl *gomock.Controller) *MockConfigIface {
	mock := &MockConfigIface{ctrl: ctrl}
	mock.recorder = &MockConfigIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigIface) EXPECT() *MockConfigIfaceMockRecorder {
	return m.recorder
}

// GetClientCommandBatchSize mocks base method.
func (m *MockConfigIface) GetClientCommandBatchSize() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClientCommandBatchSize")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetClientCommandBatchSize indicates an expected call of GetClientCommandBatchSize.
func (mr *MockConfigIfaceMockRecorder) GetClientCommandBatchSize() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClientCommandBatchSize", reflect.TypeOf((*MockConfigIface)(nil).GetClientCommandBatchSize))
}

// GetClientCommandBufferSize mocks base method.
func (m *MockConfigIface) GetClientCommandBufferSize() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClientCommandBufferSize")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetClientCommandBufferSize indicates an expected call of GetClientCommandBufferSize.
func (mr *MockConfigIfaceMockRecorder) GetClientCommandBufferSize() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClientCommandBufferSize", reflect.TypeOf((*MockConfigIface)(nil).GetClientCommandBufferSize))
}

// GetElectionTimeout mocks base method.
func (m *MockConfigIface) GetElectionTimeout() time.Duration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetElectionTimeout")
	ret0, _ := ret[0].(time.Duration)
	return ret0
}

// GetElectionTimeout indicates an expected call of GetElectionTimeout.
func (mr *MockConfigIfaceMockRecorder) GetElectionTimeout() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetElectionTimeout", reflect.TypeOf((*MockConfigIface)(nil).GetElectionTimeout))
}

// GetLeaderHeartbeatPeriod mocks base method.
func (m *MockConfigIface) GetLeaderHeartbeatPeriod() time.Duration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLeaderHeartbeatPeriod")
	ret0, _ := ret[0].(time.Duration)
	return ret0
}

// GetLeaderHeartbeatPeriod indicates an expected call of GetLeaderHeartbeatPeriod.
func (mr *MockConfigIfaceMockRecorder) GetLeaderHeartbeatPeriod() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLeaderHeartbeatPeriod", reflect.TypeOf((*MockConfigIface)(nil).GetLeaderHeartbeatPeriod))
}

// GetRPCRequestTimeout mocks base method.
func (m *MockConfigIface) GetRPCRequestTimeout() time.Duration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRPCRequestTimeout")
	ret0, _ := ret[0].(time.Duration)
	return ret0
}

// GetRPCRequestTimeout indicates an expected call of GetRPCRequestTimeout.
func (mr *MockConfigIfaceMockRecorder) GetRPCRequestTimeout() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRPCRequestTimeout", reflect.TypeOf((*MockConfigIface)(nil).GetRPCRequestTimeout))
}

// GetRaftNodeRequestBufferSize mocks base method.
func (m *MockConfigIface) GetRaftNodeRequestBufferSize() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRaftNodeRequestBufferSize")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetRaftNodeRequestBufferSize indicates an expected call of GetRaftNodeRequestBufferSize.
func (mr *MockConfigIfaceMockRecorder) GetRaftNodeRequestBufferSize() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRaftNodeRequestBufferSize", reflect.TypeOf((*MockConfigIface)(nil).GetRaftNodeRequestBufferSize))
}

// String mocks base method.
func (m *MockConfigIface) String() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "String")
	ret0, _ := ret[0].(string)
	return ret0
}

// String indicates an expected call of String.
func (mr *MockConfigIfaceMockRecorder) String() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "String", reflect.TypeOf((*MockConfigIface)(nil).String))
}
