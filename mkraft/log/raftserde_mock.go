// Code generated by MockGen. DO NOT EDIT.
// Source: mkraft/log/serde.go
//
// Generated by this command:
//
//	mockgen -source=mkraft/log/serde.go -destination=./mkraft/log/raftserde_mock.go -package log
//

// Package log is a generated GoMock package.
package log

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRaftSerdeIface is a mock of RaftSerdeIface interface.
type MockRaftSerdeIface struct {
	ctrl     *gomock.Controller
	recorder *MockRaftSerdeIfaceMockRecorder
	isgomock struct{}
}

// MockRaftSerdeIfaceMockRecorder is the mock recorder for MockRaftSerdeIface.
type MockRaftSerdeIfaceMockRecorder struct {
	mock *MockRaftSerdeIface
}

// NewMockRaftSerdeIface creates a new mock instance.
func NewMockRaftSerdeIface(ctrl *gomock.Controller) *MockRaftSerdeIface {
	mock := &MockRaftSerdeIface{ctrl: ctrl}
	mock.recorder = &MockRaftSerdeIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRaftSerdeIface) EXPECT() *MockRaftSerdeIfaceMockRecorder {
	return m.recorder
}

// Deserialize mocks base method.
func (m *MockRaftSerdeIface) Deserialize(data []byte) (*RaftLogEntry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Deserialize", data)
	ret0, _ := ret[0].(*RaftLogEntry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Deserialize indicates an expected call of Deserialize.
func (mr *MockRaftSerdeIfaceMockRecorder) Deserialize(data any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Deserialize", reflect.TypeOf((*MockRaftSerdeIface)(nil).Deserialize), data)
}

// Serialize mocks base method.
func (m *MockRaftSerdeIface) Serialize(entry *RaftLogEntry) []byte {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Serialize", entry)
	ret0, _ := ret[0].([]byte)
	return ret0
}

// Serialize indicates an expected call of Serialize.
func (mr *MockRaftSerdeIfaceMockRecorder) Serialize(entry any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Serialize", reflect.TypeOf((*MockRaftSerdeIface)(nil).Serialize), entry)
}
