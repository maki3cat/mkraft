// Code generated by MockGen. DO NOT EDIT.
// Source: raft/membership.go
//
// Generated by this command:
//
//	mockgen -source=raft/membership.go -destination=./raft/membership_mock.go -package raft
//

// Package raft is a generated GoMock package.
package raft

import (
	reflect "reflect"

	rpc "github.com/maki3cat/mkraft/rpc"
	gomock "go.uber.org/mock/gomock"
)

// MockMembershipMgrIface is a mock of MembershipMgrIface interface.
type MockMembershipMgrIface struct {
	ctrl     *gomock.Controller
	recorder *MockMembershipMgrIfaceMockRecorder
	isgomock struct{}
}

// MockMembershipMgrIfaceMockRecorder is the mock recorder for MockMembershipMgrIface.
type MockMembershipMgrIfaceMockRecorder struct {
	mock *MockMembershipMgrIface
}

// NewMockMembershipMgrIface creates a new mock instance.
func NewMockMembershipMgrIface(ctrl *gomock.Controller) *MockMembershipMgrIface {
	mock := &MockMembershipMgrIface{ctrl: ctrl}
	mock.recorder = &MockMembershipMgrIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMembershipMgrIface) EXPECT() *MockMembershipMgrIfaceMockRecorder {
	return m.recorder
}

// GetAllPeerClients mocks base method.
func (m *MockMembershipMgrIface) GetAllPeerClients() ([]rpc.InternalClientIface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllPeerClients")
	ret0, _ := ret[0].([]rpc.InternalClientIface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllPeerClients indicates an expected call of GetAllPeerClients.
func (mr *MockMembershipMgrIfaceMockRecorder) GetAllPeerClients() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllPeerClients", reflect.TypeOf((*MockMembershipMgrIface)(nil).GetAllPeerClients))
}

// GetMemberCount mocks base method.
func (m *MockMembershipMgrIface) GetMemberCount() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMemberCount")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetMemberCount indicates an expected call of GetMemberCount.
func (mr *MockMembershipMgrIfaceMockRecorder) GetMemberCount() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMemberCount", reflect.TypeOf((*MockMembershipMgrIface)(nil).GetMemberCount))
}

// GracefulShutdown mocks base method.
func (m *MockMembershipMgrIface) GracefulShutdown() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GracefulShutdown")
}

// GracefulShutdown indicates an expected call of GracefulShutdown.
func (mr *MockMembershipMgrIfaceMockRecorder) GracefulShutdown() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GracefulShutdown", reflect.TypeOf((*MockMembershipMgrIface)(nil).GracefulShutdown))
}
