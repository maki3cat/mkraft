// Code generated by MockGen. DO NOT EDIT.
// Source: raft/node.go
//
// Generated by this command:
//
//	mockgen -source=raft/node.go -destination=./raft/node_mock.go -package raft
//

// Package raft is a generated GoMock package.
package raft

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockNodeIface is a mock of NodeIface interface.
type MockNodeIface struct {
	ctrl     *gomock.Controller
	recorder *MockNodeIfaceMockRecorder
	isgomock struct{}
}

// MockNodeIfaceMockRecorder is the mock recorder for MockNodeIface.
type MockNodeIfaceMockRecorder struct {
	mock *MockNodeIface
}

// NewMockNodeIface creates a new mock instance.
func NewMockNodeIface(ctrl *gomock.Controller) *MockNodeIface {
	mock := &MockNodeIface{ctrl: ctrl}
	mock.recorder = &MockNodeIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNodeIface) EXPECT() *MockNodeIfaceMockRecorder {
	return m.recorder
}

// AppendEntryRequest mocks base method.
func (m *MockNodeIface) AppendEntryRequest(req *AppendEntriesInternal) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AppendEntryRequest", req)
}

// AppendEntryRequest indicates an expected call of AppendEntryRequest.
func (mr *MockNodeIfaceMockRecorder) AppendEntryRequest(req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AppendEntryRequest", reflect.TypeOf((*MockNodeIface)(nil).AppendEntryRequest), req)
}

// Start mocks base method.
func (m *MockNodeIface) Start(ctx context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Start", ctx)
}

// Start indicates an expected call of Start.
func (mr *MockNodeIfaceMockRecorder) Start(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockNodeIface)(nil).Start), ctx)
}

// Stop mocks base method.
func (m *MockNodeIface) Stop(ctx context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Stop", ctx)
}

// Stop indicates an expected call of Stop.
func (mr *MockNodeIfaceMockRecorder) Stop(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stop", reflect.TypeOf((*MockNodeIface)(nil).Stop), ctx)
}

// VoteRequest mocks base method.
func (m *MockNodeIface) VoteRequest(req *RequestVoteInternal) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "VoteRequest", req)
}

// VoteRequest indicates an expected call of VoteRequest.
func (mr *MockNodeIfaceMockRecorder) VoteRequest(req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VoteRequest", reflect.TypeOf((*MockNodeIface)(nil).VoteRequest), req)
}
